#!/bin/bash
#
# The simple $IPT firewall for Slackware 
# Inspired by a firewall generated by http://www.slackware.com/~alien/efg/ generator
#
# Run with start, stop, save or restore argument
#
# (c) Jan Belohoubek, 2025
#


# IPTables Location - adjust if needed

IPT="iptables"
IPTS="iptables-save"
IPTR="iptables-restore"


# Save and Restore arguments handled here
if [ "$1" = "save" ]
then
	echo -n "Saving firewall to /etc/sysconfig/iptables ... "
	$IPTS > /etc/sysconfig/iptables
	echo "done"
	exit 0
elif [ "$1" = "restore" ]
then
	echo -n "Restoring firewall from /etc/sysconfig/iptables ... "
	$IPTR < /etc/sysconfig/iptables
	echo "done"
	exit 0
fi

echo "Flushing Tables ..."

# Reset Default Policies
$IPT -P INPUT ACCEPT
$IPT -P FORWARD ACCEPT
$IPT -P OUTPUT ACCEPT
$IPT -t nat -P PREROUTING ACCEPT
$IPT -t nat -P POSTROUTING ACCEPT
$IPT -t nat -P OUTPUT ACCEPT
$IPT -t mangle -P PREROUTING ACCEPT
$IPT -t mangle -P OUTPUT ACCEPT

# Flush all rules
$IPT -F
$IPT -t nat -F
$IPT -t mangle -F

# Erase all non-default chains
$IPT -X
$IPT -t nat -X
$IPT -t mangle -X

if [ "$1" = "stop" ]
then
	echo "Firewall completely flushed!  Now running with no firewall."
	exit 0
fi

# Set Default Policies
$IPT -P INPUT DROP
$IPT -P OUTPUT DROP
$IPT -P FORWARD DROP

echo "Setting-up firewall ..."

# Output
# Localhost
$IPT -A OUTPUT -p ALL -o lo -j ACCEPT
$IPT -A OUTPUT -p ALL -o lo -j ACCEPT
$IPT -A OUTPUT -p ALL -j ACCEPT

# input
$IPT -A INPUT -i lo -j ACCEPT
$IPT -A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT
$IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# echo "Enable ssh ..."
#$IPT -A INPUT -p tcp --dport 22 -j ACCEPT

echo "Enable ping ..."
# However, invalid icmp packets need to be dropped to prevent a possible exploit.
$IPT -A OUTPUT -p icmp -m conntrack --ctstate INVALID -j DROP

$IPT -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
$IPT -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT


exit 0
